/**
 ******************************************************************************
 * @file           : main.c
 * @author         : Auto-generated by STM32CubeIDE
 * @brief          : Main program body
 ******************************************************************************
 * @attention
 *
 * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
 * All rights reserved.</center></h2>
 *
 * This software component is licensed by ST under BSD 3-Clause license,
 * the "License"; You may not use this file except in compliance with the
 * License. You may obtain a copy of the License at:
 *                        opensource.org/licenses/BSD-3-Clause
 *
 ******************************************************************************
 */

#if !defined(__SOFT_FP__) && defined(__ARM_FP)
  #warning "FPU is not initialized, but the project is compiling for an FPU. Please initialize the FPU before use."
#endif

int main(void)
{
		volatile unsigned int *GPIOA_MODER =  (unsigned int*) (0x40020000 + 0x00);
		volatile unsigned int *GPIOA_ODR = (unsigned int *)(0x40020000 + 0x14);
		volatile unsigned int *TIM2_CR1 = (unsigned *)(0x40000000 + 0x00);
		volatile unsigned int *TIM2_PSC = (unsigned *)(0x40000000 + 0x28);
		volatile unsigned int *TIM2_ARR = (unsigned *)(0x40000000 + 0x2c);
		volatile unsigned int *TIM2_CNT = (unsigned *)(0x40000000 + 0x24);
		volatile unsigned int *RCC_APB1ENR = (unsigned *)(0x40023800 + 0x40);
		volatile unsigned int *RCC_AHB1ENR = (unsigned *)(0x40023800 + 0x30);

		// ENABLING THE TIMER
		*RCC_APB1ENR |= 0x01;

		// ENABLING THE COUNTER
		*TIM2_CR1 |= 0x01;

		// ENABLE THE GPIOA
		*RCC_AHB1ENR |= 0x01U;

		//ENABLING THE OUTPUT PIN
		*GPIOA_MODER |=0x100000;

		// Initialise the the registers values
		*TIM2_PSC = 2;
		*TIM2_ARR = 1000;

		// APPLICATION CODE
		//*GPIOA_ODR = *GPIOA_ODR | 0x400;
		while(1){
			if(*TIM2_CNT == *TIM2_ARR){
				*GPIOA_ODR =*GPIOA_ODR ^ 0x400;
			}
		}
}
